---
name: Regular tests

on:
  workflow_dispatch:
    inputs:
      notify:
        description: "Notify about test results to the discord channel"
        required: false
        default: false
        type: boolean
  schedule:
    - cron: "0 */3 * * *"

env:
  FOUNDRY_PROFILE: ci
  TERM: ansi

jobs:
  bootstrap:
    name: Bootstrap environment
    runs-on: ubuntu-latest
    outputs:
      cache-path: ${{ steps.cache.outputs.path }}
      cache-key: ${{ steps.cache.outputs.key }}
    env:
      FORGE_REV: af97b2c
      JUST_TAG: 1.24.0
    steps:
      - name: Build cache params
        id: cache
        run: |
          echo "path=$CACHE_PATH" >> "$GITHUB_OUTPUT"
          echo "$KEY_INPUT" | md5sum | awk '{print $1}' | xargs -I% echo "key=cargobin-%-${RUNNER_OS}" >> "$GITHUB_OUTPUT"
        env:
          CACHE_PATH: |
            ~/.cargo/bin/
          KEY_INPUT: |
            forge:${{env.FORGE_REV}}
            just:${{env.JUST_TAG}}

      - uses: actions/cache@v4
        id: get-cache
        with:
          path: ${{ steps.cache.outputs.path }}
          key: ${{ steps.cache.outputs.key }}

      - name: Install just
        run: cargo install "just@$JUST_TAG"
        if: steps.get-cache.outputs.cache-hit != 'true'

      - name: Install forge & anvil
        run: cargo install --git https://github.com/foundry-rs/foundry --rev "$FORGE_REV" --profile local forge anvil
        if: steps.get-cache.outputs.cache-hit != 'true'

  test:
    name: Integration & Invariant tests
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/cache@v4
        with:
          path: ${{ needs.bootstrap.outputs.cache-path }}
          key: ${{ needs.bootstrap.outputs.cache-key }}

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: yarn
          cache-dependency-path: "**/yarn.lock"

      - name: Install dependencies
        run: just deps

      - name: Build
        run: just build --sizes

      - name: Run integration & invariant tests
        run: just test-post-voting
        env:
          CHAIN: holesky
          DEPLOY_CONFIG: ./artifacts/holesky/deploy-holesky.json
          RPC_URL: ${{ secrets.RPC_URL_HOLESKY }}

      - name: Echo embeds to the env variable
        if: ${{ failure() && (github.event_name == 'schedule' || inputs.notify) }}
        run: |
          EMBEDS=$(cat <<EOF
          [
            {
              "title": "Regular tests are failed! :scream:",
              "url": "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID",
              "description": "Check the logs for more information."
            }
          ]
          EOF
          )
          EMBEDS=$(echo "$EMBEDS" | jq -c .) # Compact JSON representation
          echo "EMBEDS=$EMBEDS" >> $GITHUB_ENV

      - name: Discord notification when fails
        if: ${{ failure() && (github.event_name == 'schedule' || inputs.notify) }}
        uses: lidofinance/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.INVARIANTS_CHECK_DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: ${{ env.EMBEDS }}
